import axios from 'axios';

const API_URL =
  'https://api-inference.huggingface.co/models/MoritzLaurer/deberta-v3-large-zeroshot-v2.0';
const API_TOKEN = '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';

const CATEGORIES = [
  '–∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π',
  '–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π',
  '–æ–±—ã—á–Ω—ã–π',
  '—Å–∫—É—á–Ω—ã–π',
  '–æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π',
  '–≥–ª—É–ø—ã–π',
  '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π',
  '—Å—Ç—Ä–∞–Ω–Ω—ã–π',
  '—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π',
  '—Å–º–µ—à–Ω–æ–π',
];
function getDialogTypeDescription(type, interestScore) {
  const descriptions = {
    –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π:
      '–î–∏–∞–ª–æ–≥ –æ—á–µ–Ω—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π, —Ç—Ä–µ–±—É–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.',
    –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π: '–î–∏–∞–ª–æ–≥ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π, —Å—Ç–æ–∏—Ç –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ –∏ —Å –∂–∏–≤–æ—Å—Ç—å—é.',
    –æ–±—ã—á–Ω—ã–π: '–î–∏–∞–ª–æ–≥ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —ç–º–æ—Ü–∏–π.',
    —Å–∫—É—á–Ω—ã–π: '–î–∏–∞–ª–æ–≥ —Å–∫—É—á–Ω—ã–π –∏ –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π, –æ—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –±–µ–∑ –¥–µ—Ç–∞–ª–µ–π.',
    –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π:
      '–î–∏–∞–ª–æ–≥ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π, –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ.',
    –≥–ª—É–ø—ã–π:
      '–î–∏–∞–ª–æ–≥ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –∏–ª–∏ –Ω–µ–ª–µ–ø—ã–π, –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å —Å –∏—Ä–æ–Ω–∏–µ–π –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å.',
    –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π: '–î–∏–∞–ª–æ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–∫—Ç—ã, —Å—Ç–æ–∏—Ç –æ—Ç–≤–µ—á–∞—Ç—å —á—ë—Ç–∫–æ –∏ –±–µ–∑ —ç–º–æ—Ü–∏–π.',
    —Å—Ç—Ä–∞–Ω–Ω—ã–π:
      '–î–∏–∞–ª–æ–≥ –Ω–µ–æ–±—ã—á–Ω—ã–π –∏–ª–∏ —Å–±–∏–≤–∞—é—â–∏–π —Å —Ç–æ–ª–∫—É, –æ—Ç–≤–µ—á–∞–π –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ.',
    —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π: '–î–∏–∞–ª–æ–≥ –Ω–∞—Å—ã—â–µ–Ω —ç–º–æ—Ü–∏—è–º–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω.',
    —Å–º–µ—à–Ω–æ–π:
      '–î–∏–∞–ª–æ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç —é–º–æ—Ä, –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤–µ—Å–µ–ª–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —à—É—Ç–∫–∏.',
  };
  return `–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–∏–∞–ª–æ–≥–∞: ${type} (${interestScore.toFixed(2)}). ${descriptions[type] || '–î–∏–∞–ª–æ–≥ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π.'}`;
}

// üîπ –û—Ü–µ–Ω–∫–∞ –¥–∏–∞–ª–æ–≥–∞
async function evaluateConversation(dialog) {
  const lastMessages = dialog
    .slice(-5)
    .map((msg) => msg.content)
    .join(' ');
  const wordCount = lastMessages.split(/\s+/).length;
  const repeatedPhrases = countRepeatedPhrases(dialog);
  const questionCount = countQuestions(dialog);

  try {
    const response = await axios.post(
      API_URL,
      { inputs: lastMessages, parameters: { candidate_labels: CATEGORIES } },
      { headers: { Authorization: `Bearer ${API_TOKEN}` } },
    );

    const result = response.data;
    console.log('üîç Hugging Face –ê–Ω–∞–ª–∏–∑:', result);

    let mainType = result.labels[0]; // –ì–ª–∞–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    let interestScore = result.scores[0]; // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

    // –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –æ—Ü–µ–Ω–∫–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ—Å—Ç–∏
    if (wordCount < 10) interestScore -= 0.2;
    if (repeatedPhrases > 2) interestScore -= 0.3;
    if (questionCount > 1) interestScore += 0.2;
    interestScore = Math.max(0, Math.min(1, interestScore));

    return {
      type: mainType,
      interestScore,
      description: getDialogTypeDescription(mainType, interestScore),
      details: { wordCount, repeatedPhrases, questionCount },
    };
  } catch (error) {
    console.error(
      '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–∞:',
      error.response?.data || error.message,
    );
    return {
      type: '–æ–±—ã—á–Ω—ã–π',
      interestScore: 0.5,
      description: getDialogTypeDescription('–æ–±—ã—á–Ω—ã–π', 0.5),
      details: {},
    };
  }
}

// üîπ –ü–æ–¥—Å—á—ë—Ç –ø–æ–≤—Ç–æ—Ä–æ–≤
function countRepeatedPhrases(dialog) {
  const phrases = dialog.map((msg) => msg.content.toLowerCase().trim());
  const uniquePhrases = new Set(phrases);
  return phrases.length - uniquePhrases.size;
}

// üîπ –ü–æ–¥—Å—á—ë—Ç –≤–æ–ø—Ä–æ—Å–æ–≤
function countQuestions(dialog) {
  return dialog.reduce(
    (count, msg) => count + (msg.content.includes('?') ? 1 : 0),
    0,
  );
}

// üîπ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –æ—Ç–≤–µ—Ç–∞
function getResponseLength(type, interestScore) {
  if (interestScore < 0.3) return '–ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ.';
  if (['–∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π', '–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π'].includes(type) && interestScore > 0.7)
    return '–î–ª–∏–Ω–Ω—ã–π, –∂–∏–≤–æ–π –æ—Ç–≤–µ—Ç.';
  if (['—Å–∫—É—á–Ω—ã–π', '–æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π', '–≥–ª—É–ø—ã–π'].includes(type))
    return '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.';
  return '–°—Ä–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç.';
}

// üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º—Ç–∞ –¥–ª—è GPT
function generatePrompt(dialogAnalysis) {
  return `–ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:\n${dialogAnalysis.description}\n\n–£—Ä–æ–≤–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ—Å—Ç–∏: ${dialogAnalysis.interestScore.toFixed(2)}.\n${getResponseLength(dialogAnalysis.type, dialogAnalysis.interestScore)}`;
}

// üöÄ **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**
(async () => {
  const dialog = [
    { role: 'user', content: '–¢—ã –Ω–µ –ø–æ–≤–µ—Ä–∏—à—å, —á—Ç–æ —Å–æ –º–Ω–æ–π —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ–∏–∑–æ—à–ª–æ!' },
    { role: 'assistant', content: '–û–≥–æ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π! –£–∂–µ –∑–∞–∏–Ω—Ç—Ä–∏–≥–æ–≤–∞–ª–∞ üòÆ' },
    {
      role: 'user',
      content: '–Ø –≤—Å—Ç—Ä–µ—Ç–∏–ª —Å—Ç–∞—Ä–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –≤–∏–¥–µ–ª 10 –ª–µ—Ç!',
    },
    { role: 'assistant', content: '–í–∞—É, —ç—Ç–æ —Ç–æ—á–Ω–æ —Å—É–¥—å–±–∞! –ö–∞–∫ –æ–Ω?' },
    {
      role: 'user',
      content: '–û—Ç–ª–∏—á–Ω–æ! –ú—ã –±–æ–ª—Ç–∞–ª–∏ –ø–∞—Ä—É —á–∞—Å–æ–≤, —Å—Ç–æ–ª—å–∫–æ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤—Å–ø–ª—ã–ª–æ.',
    },
  ];

  const dialogAnalysis = await evaluateConversation(dialog);
  console.log(
    `üìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: ${dialogAnalysis.type} (${dialogAnalysis.interestScore})`,
  );
  console.log(`üìñ –û–ø–∏—Å–∞–Ω–∏–µ: ${dialogAnalysis.description}`);
  console.log(
    `üìù –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: ${getResponseLength(dialogAnalysis.type, dialogAnalysis.interestScore)}`,
  );
  console.log(`üéØ –ü—Ä–æ–º—Ç –¥–ª—è GPT:\n${generatePrompt(dialogAnalysis)}`);
})();
